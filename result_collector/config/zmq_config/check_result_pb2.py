# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: check_result.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import keyword_list_pb2 as keyword__list__pb2
import task_pb2 as task__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='check_result.proto',
  package='zmq_if',
  syntax='proto3',
  serialized_pb=_b('\n\x12\x63heck_result.proto\x12\x06zmq_if\x1a\x12keyword_list.proto\x1a\ntask.proto\"y\n\x0bHitPosition\x12\x0e\n\x06offset\x18\x01 \x01(\x03\x12\x0f\n\x07\x63ontext\x18\x02 \x01(\x0c\x12#\n\x0b\x65ncode_hint\x18\x03 \x01(\x0e\x32\x0e.zmq_if.Encode\x12$\n\x07keyword\x18\x04 \x01(\x0b\x32\x13.zmq_if.KeywordItem\"m\n\x0b\x43heckResult\x12\x1a\n\x04task\x18\x01 \x01(\x0b\x32\x0c.zmq_if.Task\x12*\n\rhit_positions\x18\x02 \x03(\x0b\x32\x13.zmq_if.HitPosition\x12\x16\n\x0ekeyword_serial\x18\x03 \x01(\x05*%\n\x06\x45ncode\x12\x08\n\x04UTF8\x10\x00\x12\x08\n\x04UCS2\x10\x01\x12\x07\n\x03GBK\x10\x02\x62\x06proto3')
  ,
  dependencies=[keyword__list__pb2.DESCRIPTOR,task__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_ENCODE = _descriptor.EnumDescriptor(
  name='Encode',
  full_name='zmq_if.Encode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UTF8', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UCS2', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GBK', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=296,
  serialized_end=333,
)
_sym_db.RegisterEnumDescriptor(_ENCODE)

Encode = enum_type_wrapper.EnumTypeWrapper(_ENCODE)
UTF8 = 0
UCS2 = 1
GBK = 2



_HITPOSITION = _descriptor.Descriptor(
  name='HitPosition',
  full_name='zmq_if.HitPosition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='offset', full_name='zmq_if.HitPosition.offset', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='context', full_name='zmq_if.HitPosition.context', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='encode_hint', full_name='zmq_if.HitPosition.encode_hint', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='keyword', full_name='zmq_if.HitPosition.keyword', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=62,
  serialized_end=183,
)


_CHECKRESULT = _descriptor.Descriptor(
  name='CheckResult',
  full_name='zmq_if.CheckResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='task', full_name='zmq_if.CheckResult.task', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hit_positions', full_name='zmq_if.CheckResult.hit_positions', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='keyword_serial', full_name='zmq_if.CheckResult.keyword_serial', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=185,
  serialized_end=294,
)

_HITPOSITION.fields_by_name['encode_hint'].enum_type = _ENCODE
_HITPOSITION.fields_by_name['keyword'].message_type = keyword__list__pb2._KEYWORDITEM
_CHECKRESULT.fields_by_name['task'].message_type = task__pb2._TASK
_CHECKRESULT.fields_by_name['hit_positions'].message_type = _HITPOSITION
DESCRIPTOR.message_types_by_name['HitPosition'] = _HITPOSITION
DESCRIPTOR.message_types_by_name['CheckResult'] = _CHECKRESULT
DESCRIPTOR.enum_types_by_name['Encode'] = _ENCODE

HitPosition = _reflection.GeneratedProtocolMessageType('HitPosition', (_message.Message,), dict(
  DESCRIPTOR = _HITPOSITION,
  __module__ = 'check_result_pb2'
  # @@protoc_insertion_point(class_scope:zmq_if.HitPosition)
  ))
_sym_db.RegisterMessage(HitPosition)

CheckResult = _reflection.GeneratedProtocolMessageType('CheckResult', (_message.Message,), dict(
  DESCRIPTOR = _CHECKRESULT,
  __module__ = 'check_result_pb2'
  # @@protoc_insertion_point(class_scope:zmq_if.CheckResult)
  ))
_sym_db.RegisterMessage(CheckResult)


# @@protoc_insertion_point(module_scope)
